material terrain
{

	technique depth
    {
	
		u_matrix = WORLD_VIEW_PROJECTION_MATRIX

		renderState
		{
			cullFace = true
			depthTest = true
		}
		
        pass
        {
            vertexShader = res/shaders/depth.vert
            fragmentShader = res/shaders/depth.frag
        }
    }
	
    technique shadow
    {
	    u_worldViewProjectionMatrix = WORLD_VIEW_PROJECTION_MATRIX

		u_normalMatrix = INVERSE_TRANSPOSE_WORLD_VIEW_MATRIX
		
		u_surfaceLayerMaps = TERRAIN_LAYER_MAPS

		u_ambientColor = SCENE_AMBIENT_COLOR
		u_directionalLightDirection[0] = LIGHT_DIRECTION
		u_directionalLightColor[0] = LIGHT_COLOR
		
		u_shadowMap=SHADOW_MAP
		u_matrix = LIGHT_MATRIX
		u_model= WORLD_MATRIX 
		u_mapSize =MAP_SIZE

		renderState
		{
			cullFace = false
			depthTest = true
		}
        pass
        {
            vertexShader = res/shaders/terrain.vert
            fragmentShader = res/shaders/terrain.frag
			defines = DIRECTIONAL_LIGHT_COUNT 1
        }
    }
}
